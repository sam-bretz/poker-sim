version: '3'

vars:
  PYTHON: python3
  VENV_DIR: ./venv
  DATA_DIR: ./data
  CHROMA_DIR: ./chroma_db
  CACHE_DIR: ./__pycache__

tasks:
  install:
    desc: Install project dependencies
    cmds:
      - "{{.PYTHON}} -m pip install -r requirements.txt"

  setup:
    desc: Set up the poker assistant environment
    deps: [install]
    cmds:
      - echo "üéØ Setting up AG2 Poker Assistant..."
      - echo "üìã Make sure Ollama is running - ollama serve"
      - echo "üì• Pull required model - ollama pull llama3.2"
      - echo "‚úÖ Run the simulator - task run"

  run:
    desc: Run the interactive poker simulator
    cmds:
      - "{{.PYTHON}} interactive_poker_simulator.py"

  test-kb:
    desc: Test knowledge base setup
    cmds:
      - "{{.PYTHON}} setup/knowledge_base_setup.py"

  clean:
    desc: Clean up all artifacts produced during usage
    cmds:
      - echo "üßπ Cleaning up poker assistant artifacts..."
      - echo "üìÇ Removing Python cache files..."
      - find . -type d -name "__pycache__" -exec rm -rf {} + 2>/dev/null || true
      - find . -name "*.pyc" -delete 2>/dev/null || true
      - find . -name "*.pyo" -delete 2>/dev/null || true
      - echo "üóÑÔ∏è Removing ChromaDB database..."
      - rm -rf {{.CHROMA_DIR}} 2>/dev/null || true
      - echo "üìÅ Removing scraped data files..."
      - rm -rf {{.DATA_DIR}} 2>/dev/null || true
      - echo "üìä Removing matplotlib figure cache..."
      - find . -name "*.png" -path "./test_*" -delete 2>/dev/null || true
      - rm -rf ~/.matplotlib 2>/dev/null || true
      - echo "üîÑ Removing session files..."
      - rm -f *.log 2>/dev/null || true
      - rm -f session_*.json 2>/dev/null || true
      - echo "‚úÖ Cleanup complete!"

  clean-deep:
    desc: Deep clean including virtual environment
    deps: [clean]
    cmds:
      - echo "üß® Deep cleaning - removing virtual environment..."
      - rm -rf {{.VENV_DIR}} 2>/dev/null || true
      - echo "‚úÖ Deep cleanup complete!"

  reset:
    desc: Reset the project to a fresh state
    deps: [clean]
    cmds:
      - echo "üîÑ Resetting poker assistant to fresh state..."
      - echo "üìã Run 'task setup' to reinitialize"

  status:
    desc: Check system status and requirements
    cmds:
      - echo "üéØ AG2 Poker Assistant Status Check"
      - echo "=================================="
      - echo "üêç Python version"
      - "{{.PYTHON}} --version || echo '‚ùå Python not found'"
      - echo ""
      - echo "üì¶ Ollama status"
      - ollama --version 2>/dev/null || echo "‚ùå Ollama not installed"
      - echo ""
      - echo "ü§ñ Available models"
      - ollama list 2>/dev/null || echo "‚ùå Ollama not running (run ollama serve)"
      - echo ""
      - echo "üìä Project artifacts"
      - echo "   ChromaDB - $([ -d '{{.CHROMA_DIR}}' ] && echo '‚úÖ exists' || echo '‚ùå not found')"
      - echo "   Data files - $([ -d '{{.DATA_DIR}}' ] && echo '‚úÖ exists' || echo '‚ùå not found')"
      - echo "   Cache files - $(find . -name '__pycache__' -type d | wc -l | xargs echo) directories"

  lint:
    desc: Run code linting and formatting
    cmds:
      - echo "üîç Linting Python code..."
      - "{{.PYTHON}} -m ruff check . --fix || true"
      - "{{.PYTHON}} -m black . --check || true"

  help:
    desc: Show available tasks
    cmds:
      - task --list-all